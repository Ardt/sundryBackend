plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
    id "io.freefair.lombok" version "6.3.0"
}

group = 'com.ardt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

    implementation 'com.google.code.gson:gson:2.8.9'
}

jacoco {
  toolVersion = '0.8.7'
  reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
  reports {
    html.enabled true
    xml.enabled false
    csv.enabled false
  }
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      element = 'CLASS'

      limit {
        counter = 'BRANCH'
        value = 'COVEREDRATIO'
        minimum = 0.90
      }
    }
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "Ardt_sundryBackend"
    property "sonar.organization", "ardt"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Title': 'SunDry', 'Version': version, 'Main-Class': 'com.ardt.sundry.jar.Main'
    }
    archiveName 'SunDryBackEnd.jar'
    dependsOn configurations.runtimeClasspath
    from {
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}